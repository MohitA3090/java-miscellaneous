/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package io.gitbub.devlibx.jm.avro.month.child;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class Container extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"Container\",\"namespace\":\"io.gitbub.devlibx.jm.avro.month.child\",\"fields\":[{\"name\":\"counter\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"aggregate\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"counter_secondary\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"aggregate_secondary\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"str\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"udf1\",\"type\":[\"null\",\"string\",\"int\",\"double\"],\"default\":null},{\"name\":\"udf2\",\"type\":[\"null\",\"string\",\"int\",\"double\"],\"default\":null},{\"name\":\"udf3\",\"type\":[\"null\",\"string\",\"int\",\"double\"],\"default\":null},{\"name\":\"udf4\",\"type\":[\"null\",\"string\",\"int\",\"double\"],\"default\":null},{\"name\":\"udf5\",\"type\":[\"null\",\"string\",\"int\",\"double\"],\"default\":null}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.lang.Integer counter;
  @Deprecated public java.lang.Double aggregate;
  @Deprecated public java.lang.Integer counter_secondary;
  @Deprecated public java.lang.Double aggregate_secondary;
  @Deprecated public java.lang.CharSequence str;
  @Deprecated public java.lang.Object udf1;
  @Deprecated public java.lang.Object udf2;
  @Deprecated public java.lang.Object udf3;
  @Deprecated public java.lang.Object udf4;
  @Deprecated public java.lang.Object udf5;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public Container() {}

  /**
   * All-args constructor.
   */
  public Container(java.lang.Integer counter, java.lang.Double aggregate, java.lang.Integer counter_secondary, java.lang.Double aggregate_secondary, java.lang.CharSequence str, java.lang.Object udf1, java.lang.Object udf2, java.lang.Object udf3, java.lang.Object udf4, java.lang.Object udf5) {
    this.counter = counter;
    this.aggregate = aggregate;
    this.counter_secondary = counter_secondary;
    this.aggregate_secondary = aggregate_secondary;
    this.str = str;
    this.udf1 = udf1;
    this.udf2 = udf2;
    this.udf3 = udf3;
    this.udf4 = udf4;
    this.udf5 = udf5;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return counter;
    case 1: return aggregate;
    case 2: return counter_secondary;
    case 3: return aggregate_secondary;
    case 4: return str;
    case 5: return udf1;
    case 6: return udf2;
    case 7: return udf3;
    case 8: return udf4;
    case 9: return udf5;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: counter = (java.lang.Integer)value$; break;
    case 1: aggregate = (java.lang.Double)value$; break;
    case 2: counter_secondary = (java.lang.Integer)value$; break;
    case 3: aggregate_secondary = (java.lang.Double)value$; break;
    case 4: str = (java.lang.CharSequence)value$; break;
    case 5: udf1 = (java.lang.Object)value$; break;
    case 6: udf2 = (java.lang.Object)value$; break;
    case 7: udf3 = (java.lang.Object)value$; break;
    case 8: udf4 = (java.lang.Object)value$; break;
    case 9: udf5 = (java.lang.Object)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'counter' field.
   */
  public java.lang.Integer getCounter() {
    return counter;
  }

  /**
   * Sets the value of the 'counter' field.
   * @param value the value to set.
   */
  public void setCounter(java.lang.Integer value) {
    this.counter = value;
  }

  /**
   * Gets the value of the 'aggregate' field.
   */
  public java.lang.Double getAggregate() {
    return aggregate;
  }

  /**
   * Sets the value of the 'aggregate' field.
   * @param value the value to set.
   */
  public void setAggregate(java.lang.Double value) {
    this.aggregate = value;
  }

  /**
   * Gets the value of the 'counter_secondary' field.
   */
  public java.lang.Integer getCounterSecondary() {
    return counter_secondary;
  }

  /**
   * Sets the value of the 'counter_secondary' field.
   * @param value the value to set.
   */
  public void setCounterSecondary(java.lang.Integer value) {
    this.counter_secondary = value;
  }

  /**
   * Gets the value of the 'aggregate_secondary' field.
   */
  public java.lang.Double getAggregateSecondary() {
    return aggregate_secondary;
  }

  /**
   * Sets the value of the 'aggregate_secondary' field.
   * @param value the value to set.
   */
  public void setAggregateSecondary(java.lang.Double value) {
    this.aggregate_secondary = value;
  }

  /**
   * Gets the value of the 'str' field.
   */
  public java.lang.CharSequence getStr() {
    return str;
  }

  /**
   * Sets the value of the 'str' field.
   * @param value the value to set.
   */
  public void setStr(java.lang.CharSequence value) {
    this.str = value;
  }

  /**
   * Gets the value of the 'udf1' field.
   */
  public java.lang.Object getUdf1() {
    return udf1;
  }

  /**
   * Sets the value of the 'udf1' field.
   * @param value the value to set.
   */
  public void setUdf1(java.lang.Object value) {
    this.udf1 = value;
  }

  /**
   * Gets the value of the 'udf2' field.
   */
  public java.lang.Object getUdf2() {
    return udf2;
  }

  /**
   * Sets the value of the 'udf2' field.
   * @param value the value to set.
   */
  public void setUdf2(java.lang.Object value) {
    this.udf2 = value;
  }

  /**
   * Gets the value of the 'udf3' field.
   */
  public java.lang.Object getUdf3() {
    return udf3;
  }

  /**
   * Sets the value of the 'udf3' field.
   * @param value the value to set.
   */
  public void setUdf3(java.lang.Object value) {
    this.udf3 = value;
  }

  /**
   * Gets the value of the 'udf4' field.
   */
  public java.lang.Object getUdf4() {
    return udf4;
  }

  /**
   * Sets the value of the 'udf4' field.
   * @param value the value to set.
   */
  public void setUdf4(java.lang.Object value) {
    this.udf4 = value;
  }

  /**
   * Gets the value of the 'udf5' field.
   */
  public java.lang.Object getUdf5() {
    return udf5;
  }

  /**
   * Sets the value of the 'udf5' field.
   * @param value the value to set.
   */
  public void setUdf5(java.lang.Object value) {
    this.udf5 = value;
  }

  /** Creates a new Container RecordBuilder */
  public static io.gitbub.devlibx.jm.avro.month.child.Container.Builder newBuilder() {
    return new io.gitbub.devlibx.jm.avro.month.child.Container.Builder();
  }
  
  /** Creates a new Container RecordBuilder by copying an existing Builder */
  public static io.gitbub.devlibx.jm.avro.month.child.Container.Builder newBuilder(io.gitbub.devlibx.jm.avro.month.child.Container.Builder other) {
    return new io.gitbub.devlibx.jm.avro.month.child.Container.Builder(other);
  }
  
  /** Creates a new Container RecordBuilder by copying an existing Container instance */
  public static io.gitbub.devlibx.jm.avro.month.child.Container.Builder newBuilder(io.gitbub.devlibx.jm.avro.month.child.Container other) {
    return new io.gitbub.devlibx.jm.avro.month.child.Container.Builder(other);
  }
  
  /**
   * RecordBuilder for Container instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<Container>
    implements org.apache.avro.data.RecordBuilder<Container> {

    private java.lang.Integer counter;
    private java.lang.Double aggregate;
    private java.lang.Integer counter_secondary;
    private java.lang.Double aggregate_secondary;
    private java.lang.CharSequence str;
    private java.lang.Object udf1;
    private java.lang.Object udf2;
    private java.lang.Object udf3;
    private java.lang.Object udf4;
    private java.lang.Object udf5;

    /** Creates a new Builder */
    private Builder() {
      super(io.gitbub.devlibx.jm.avro.month.child.Container.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(io.gitbub.devlibx.jm.avro.month.child.Container.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.counter)) {
        this.counter = data().deepCopy(fields()[0].schema(), other.counter);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.aggregate)) {
        this.aggregate = data().deepCopy(fields()[1].schema(), other.aggregate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.counter_secondary)) {
        this.counter_secondary = data().deepCopy(fields()[2].schema(), other.counter_secondary);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.aggregate_secondary)) {
        this.aggregate_secondary = data().deepCopy(fields()[3].schema(), other.aggregate_secondary);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.str)) {
        this.str = data().deepCopy(fields()[4].schema(), other.str);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.udf1)) {
        this.udf1 = data().deepCopy(fields()[5].schema(), other.udf1);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.udf2)) {
        this.udf2 = data().deepCopy(fields()[6].schema(), other.udf2);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.udf3)) {
        this.udf3 = data().deepCopy(fields()[7].schema(), other.udf3);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.udf4)) {
        this.udf4 = data().deepCopy(fields()[8].schema(), other.udf4);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.udf5)) {
        this.udf5 = data().deepCopy(fields()[9].schema(), other.udf5);
        fieldSetFlags()[9] = true;
      }
    }
    
    /** Creates a Builder by copying an existing Container instance */
    private Builder(io.gitbub.devlibx.jm.avro.month.child.Container other) {
            super(io.gitbub.devlibx.jm.avro.month.child.Container.SCHEMA$);
      if (isValidValue(fields()[0], other.counter)) {
        this.counter = data().deepCopy(fields()[0].schema(), other.counter);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.aggregate)) {
        this.aggregate = data().deepCopy(fields()[1].schema(), other.aggregate);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.counter_secondary)) {
        this.counter_secondary = data().deepCopy(fields()[2].schema(), other.counter_secondary);
        fieldSetFlags()[2] = true;
      }
      if (isValidValue(fields()[3], other.aggregate_secondary)) {
        this.aggregate_secondary = data().deepCopy(fields()[3].schema(), other.aggregate_secondary);
        fieldSetFlags()[3] = true;
      }
      if (isValidValue(fields()[4], other.str)) {
        this.str = data().deepCopy(fields()[4].schema(), other.str);
        fieldSetFlags()[4] = true;
      }
      if (isValidValue(fields()[5], other.udf1)) {
        this.udf1 = data().deepCopy(fields()[5].schema(), other.udf1);
        fieldSetFlags()[5] = true;
      }
      if (isValidValue(fields()[6], other.udf2)) {
        this.udf2 = data().deepCopy(fields()[6].schema(), other.udf2);
        fieldSetFlags()[6] = true;
      }
      if (isValidValue(fields()[7], other.udf3)) {
        this.udf3 = data().deepCopy(fields()[7].schema(), other.udf3);
        fieldSetFlags()[7] = true;
      }
      if (isValidValue(fields()[8], other.udf4)) {
        this.udf4 = data().deepCopy(fields()[8].schema(), other.udf4);
        fieldSetFlags()[8] = true;
      }
      if (isValidValue(fields()[9], other.udf5)) {
        this.udf5 = data().deepCopy(fields()[9].schema(), other.udf5);
        fieldSetFlags()[9] = true;
      }
    }

    /** Gets the value of the 'counter' field */
    public java.lang.Integer getCounter() {
      return counter;
    }
    
    /** Sets the value of the 'counter' field */
    public io.gitbub.devlibx.jm.avro.month.child.Container.Builder setCounter(java.lang.Integer value) {
      validate(fields()[0], value);
      this.counter = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'counter' field has been set */
    public boolean hasCounter() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'counter' field */
    public io.gitbub.devlibx.jm.avro.month.child.Container.Builder clearCounter() {
      counter = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'aggregate' field */
    public java.lang.Double getAggregate() {
      return aggregate;
    }
    
    /** Sets the value of the 'aggregate' field */
    public io.gitbub.devlibx.jm.avro.month.child.Container.Builder setAggregate(java.lang.Double value) {
      validate(fields()[1], value);
      this.aggregate = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'aggregate' field has been set */
    public boolean hasAggregate() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'aggregate' field */
    public io.gitbub.devlibx.jm.avro.month.child.Container.Builder clearAggregate() {
      aggregate = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'counter_secondary' field */
    public java.lang.Integer getCounterSecondary() {
      return counter_secondary;
    }
    
    /** Sets the value of the 'counter_secondary' field */
    public io.gitbub.devlibx.jm.avro.month.child.Container.Builder setCounterSecondary(java.lang.Integer value) {
      validate(fields()[2], value);
      this.counter_secondary = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'counter_secondary' field has been set */
    public boolean hasCounterSecondary() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'counter_secondary' field */
    public io.gitbub.devlibx.jm.avro.month.child.Container.Builder clearCounterSecondary() {
      counter_secondary = null;
      fieldSetFlags()[2] = false;
      return this;
    }

    /** Gets the value of the 'aggregate_secondary' field */
    public java.lang.Double getAggregateSecondary() {
      return aggregate_secondary;
    }
    
    /** Sets the value of the 'aggregate_secondary' field */
    public io.gitbub.devlibx.jm.avro.month.child.Container.Builder setAggregateSecondary(java.lang.Double value) {
      validate(fields()[3], value);
      this.aggregate_secondary = value;
      fieldSetFlags()[3] = true;
      return this; 
    }
    
    /** Checks whether the 'aggregate_secondary' field has been set */
    public boolean hasAggregateSecondary() {
      return fieldSetFlags()[3];
    }
    
    /** Clears the value of the 'aggregate_secondary' field */
    public io.gitbub.devlibx.jm.avro.month.child.Container.Builder clearAggregateSecondary() {
      aggregate_secondary = null;
      fieldSetFlags()[3] = false;
      return this;
    }

    /** Gets the value of the 'str' field */
    public java.lang.CharSequence getStr() {
      return str;
    }
    
    /** Sets the value of the 'str' field */
    public io.gitbub.devlibx.jm.avro.month.child.Container.Builder setStr(java.lang.CharSequence value) {
      validate(fields()[4], value);
      this.str = value;
      fieldSetFlags()[4] = true;
      return this; 
    }
    
    /** Checks whether the 'str' field has been set */
    public boolean hasStr() {
      return fieldSetFlags()[4];
    }
    
    /** Clears the value of the 'str' field */
    public io.gitbub.devlibx.jm.avro.month.child.Container.Builder clearStr() {
      str = null;
      fieldSetFlags()[4] = false;
      return this;
    }

    /** Gets the value of the 'udf1' field */
    public java.lang.Object getUdf1() {
      return udf1;
    }
    
    /** Sets the value of the 'udf1' field */
    public io.gitbub.devlibx.jm.avro.month.child.Container.Builder setUdf1(java.lang.Object value) {
      validate(fields()[5], value);
      this.udf1 = value;
      fieldSetFlags()[5] = true;
      return this; 
    }
    
    /** Checks whether the 'udf1' field has been set */
    public boolean hasUdf1() {
      return fieldSetFlags()[5];
    }
    
    /** Clears the value of the 'udf1' field */
    public io.gitbub.devlibx.jm.avro.month.child.Container.Builder clearUdf1() {
      udf1 = null;
      fieldSetFlags()[5] = false;
      return this;
    }

    /** Gets the value of the 'udf2' field */
    public java.lang.Object getUdf2() {
      return udf2;
    }
    
    /** Sets the value of the 'udf2' field */
    public io.gitbub.devlibx.jm.avro.month.child.Container.Builder setUdf2(java.lang.Object value) {
      validate(fields()[6], value);
      this.udf2 = value;
      fieldSetFlags()[6] = true;
      return this; 
    }
    
    /** Checks whether the 'udf2' field has been set */
    public boolean hasUdf2() {
      return fieldSetFlags()[6];
    }
    
    /** Clears the value of the 'udf2' field */
    public io.gitbub.devlibx.jm.avro.month.child.Container.Builder clearUdf2() {
      udf2 = null;
      fieldSetFlags()[6] = false;
      return this;
    }

    /** Gets the value of the 'udf3' field */
    public java.lang.Object getUdf3() {
      return udf3;
    }
    
    /** Sets the value of the 'udf3' field */
    public io.gitbub.devlibx.jm.avro.month.child.Container.Builder setUdf3(java.lang.Object value) {
      validate(fields()[7], value);
      this.udf3 = value;
      fieldSetFlags()[7] = true;
      return this; 
    }
    
    /** Checks whether the 'udf3' field has been set */
    public boolean hasUdf3() {
      return fieldSetFlags()[7];
    }
    
    /** Clears the value of the 'udf3' field */
    public io.gitbub.devlibx.jm.avro.month.child.Container.Builder clearUdf3() {
      udf3 = null;
      fieldSetFlags()[7] = false;
      return this;
    }

    /** Gets the value of the 'udf4' field */
    public java.lang.Object getUdf4() {
      return udf4;
    }
    
    /** Sets the value of the 'udf4' field */
    public io.gitbub.devlibx.jm.avro.month.child.Container.Builder setUdf4(java.lang.Object value) {
      validate(fields()[8], value);
      this.udf4 = value;
      fieldSetFlags()[8] = true;
      return this; 
    }
    
    /** Checks whether the 'udf4' field has been set */
    public boolean hasUdf4() {
      return fieldSetFlags()[8];
    }
    
    /** Clears the value of the 'udf4' field */
    public io.gitbub.devlibx.jm.avro.month.child.Container.Builder clearUdf4() {
      udf4 = null;
      fieldSetFlags()[8] = false;
      return this;
    }

    /** Gets the value of the 'udf5' field */
    public java.lang.Object getUdf5() {
      return udf5;
    }
    
    /** Sets the value of the 'udf5' field */
    public io.gitbub.devlibx.jm.avro.month.child.Container.Builder setUdf5(java.lang.Object value) {
      validate(fields()[9], value);
      this.udf5 = value;
      fieldSetFlags()[9] = true;
      return this; 
    }
    
    /** Checks whether the 'udf5' field has been set */
    public boolean hasUdf5() {
      return fieldSetFlags()[9];
    }
    
    /** Clears the value of the 'udf5' field */
    public io.gitbub.devlibx.jm.avro.month.child.Container.Builder clearUdf5() {
      udf5 = null;
      fieldSetFlags()[9] = false;
      return this;
    }

    @Override
    public Container build() {
      try {
        Container record = new Container();
        record.counter = fieldSetFlags()[0] ? this.counter : (java.lang.Integer) defaultValue(fields()[0]);
        record.aggregate = fieldSetFlags()[1] ? this.aggregate : (java.lang.Double) defaultValue(fields()[1]);
        record.counter_secondary = fieldSetFlags()[2] ? this.counter_secondary : (java.lang.Integer) defaultValue(fields()[2]);
        record.aggregate_secondary = fieldSetFlags()[3] ? this.aggregate_secondary : (java.lang.Double) defaultValue(fields()[3]);
        record.str = fieldSetFlags()[4] ? this.str : (java.lang.CharSequence) defaultValue(fields()[4]);
        record.udf1 = fieldSetFlags()[5] ? this.udf1 : (java.lang.Object) defaultValue(fields()[5]);
        record.udf2 = fieldSetFlags()[6] ? this.udf2 : (java.lang.Object) defaultValue(fields()[6]);
        record.udf3 = fieldSetFlags()[7] ? this.udf3 : (java.lang.Object) defaultValue(fields()[7]);
        record.udf4 = fieldSetFlags()[8] ? this.udf4 : (java.lang.Object) defaultValue(fields()[8]);
        record.udf5 = fieldSetFlags()[9] ? this.udf5 : (java.lang.Object) defaultValue(fields()[9]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
