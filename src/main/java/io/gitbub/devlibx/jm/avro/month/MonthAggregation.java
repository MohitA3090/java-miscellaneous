/**
 * Autogenerated by Avro
 * 
 * DO NOT EDIT DIRECTLY
 */
package io.gitbub.devlibx.jm.avro.month;  
@SuppressWarnings("all")
@org.apache.avro.specific.AvroGenerated
public class MonthAggregation extends org.apache.avro.specific.SpecificRecordBase implements org.apache.avro.specific.SpecificRecord {
  public static final org.apache.avro.Schema SCHEMA$ = new org.apache.avro.Schema.Parser().parse("{\"type\":\"record\",\"name\":\"MonthAggregation\",\"namespace\":\"io.gitbub.devlibx.jm.avro.month\",\"fields\":[{\"name\":\"ParentContainer\",\"type\":{\"type\":\"array\",\"items\":{\"type\":\"record\",\"name\":\"Container\",\"namespace\":\"io.gitbub.devlibx.jm.avro.month.child\",\"fields\":[{\"name\":\"counter\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"aggregate\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"counter_secondary\",\"type\":[\"null\",\"int\"],\"default\":null},{\"name\":\"aggregate_secondary\",\"type\":[\"null\",\"double\"],\"default\":null},{\"name\":\"str\",\"type\":[\"null\",\"string\"],\"default\":null},{\"name\":\"udf1\",\"type\":[\"null\",\"string\",\"int\",\"double\"],\"default\":null},{\"name\":\"udf2\",\"type\":[\"null\",\"string\",\"int\",\"double\"],\"default\":null},{\"name\":\"udf3\",\"type\":[\"null\",\"string\",\"int\",\"double\"],\"default\":null},{\"name\":\"udf4\",\"type\":[\"null\",\"string\",\"int\",\"double\"],\"default\":null},{\"name\":\"udf5\",\"type\":[\"null\",\"string\",\"int\",\"double\"],\"default\":null}]}},\"default\":[]},{\"name\":\"data\",\"type\":[\"null\",{\"type\":\"map\",\"values\":\"io.gitbub.devlibx.jm.avro.month.child.Container\"}],\"default\":null},{\"name\":\"version\",\"type\":\"int\",\"default\":1}]}");
  public static org.apache.avro.Schema getClassSchema() { return SCHEMA$; }
  @Deprecated public java.util.List<io.gitbub.devlibx.jm.avro.month.child.Container> ParentContainer;
  @Deprecated public java.util.Map<java.lang.CharSequence,io.gitbub.devlibx.jm.avro.month.child.Container> data;
  @Deprecated public int version;

  /**
   * Default constructor.  Note that this does not initialize fields
   * to their default values from the schema.  If that is desired then
   * one should use <code>newBuilder()</code>. 
   */
  public MonthAggregation() {}

  /**
   * All-args constructor.
   */
  public MonthAggregation(java.util.List<io.gitbub.devlibx.jm.avro.month.child.Container> ParentContainer, java.util.Map<java.lang.CharSequence,io.gitbub.devlibx.jm.avro.month.child.Container> data, java.lang.Integer version) {
    this.ParentContainer = ParentContainer;
    this.data = data;
    this.version = version;
  }

  public org.apache.avro.Schema getSchema() { return SCHEMA$; }
  // Used by DatumWriter.  Applications should not call. 
  public java.lang.Object get(int field$) {
    switch (field$) {
    case 0: return ParentContainer;
    case 1: return data;
    case 2: return version;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }
  // Used by DatumReader.  Applications should not call. 
  @SuppressWarnings(value="unchecked")
  public void put(int field$, java.lang.Object value$) {
    switch (field$) {
    case 0: ParentContainer = (java.util.List<io.gitbub.devlibx.jm.avro.month.child.Container>)value$; break;
    case 1: data = (java.util.Map<java.lang.CharSequence,io.gitbub.devlibx.jm.avro.month.child.Container>)value$; break;
    case 2: version = (java.lang.Integer)value$; break;
    default: throw new org.apache.avro.AvroRuntimeException("Bad index");
    }
  }

  /**
   * Gets the value of the 'ParentContainer' field.
   */
  public java.util.List<io.gitbub.devlibx.jm.avro.month.child.Container> getParentContainer() {
    return ParentContainer;
  }

  /**
   * Sets the value of the 'ParentContainer' field.
   * @param value the value to set.
   */
  public void setParentContainer(java.util.List<io.gitbub.devlibx.jm.avro.month.child.Container> value) {
    this.ParentContainer = value;
  }

  /**
   * Gets the value of the 'data' field.
   */
  public java.util.Map<java.lang.CharSequence,io.gitbub.devlibx.jm.avro.month.child.Container> getData() {
    return data;
  }

  /**
   * Sets the value of the 'data' field.
   * @param value the value to set.
   */
  public void setData(java.util.Map<java.lang.CharSequence,io.gitbub.devlibx.jm.avro.month.child.Container> value) {
    this.data = value;
  }

  /**
   * Gets the value of the 'version' field.
   */
  public java.lang.Integer getVersion() {
    return version;
  }

  /**
   * Sets the value of the 'version' field.
   * @param value the value to set.
   */
  public void setVersion(java.lang.Integer value) {
    this.version = value;
  }

  /** Creates a new MonthAggregation RecordBuilder */
  public static io.gitbub.devlibx.jm.avro.month.MonthAggregation.Builder newBuilder() {
    return new io.gitbub.devlibx.jm.avro.month.MonthAggregation.Builder();
  }
  
  /** Creates a new MonthAggregation RecordBuilder by copying an existing Builder */
  public static io.gitbub.devlibx.jm.avro.month.MonthAggregation.Builder newBuilder(io.gitbub.devlibx.jm.avro.month.MonthAggregation.Builder other) {
    return new io.gitbub.devlibx.jm.avro.month.MonthAggregation.Builder(other);
  }
  
  /** Creates a new MonthAggregation RecordBuilder by copying an existing MonthAggregation instance */
  public static io.gitbub.devlibx.jm.avro.month.MonthAggregation.Builder newBuilder(io.gitbub.devlibx.jm.avro.month.MonthAggregation other) {
    return new io.gitbub.devlibx.jm.avro.month.MonthAggregation.Builder(other);
  }
  
  /**
   * RecordBuilder for MonthAggregation instances.
   */
  public static class Builder extends org.apache.avro.specific.SpecificRecordBuilderBase<MonthAggregation>
    implements org.apache.avro.data.RecordBuilder<MonthAggregation> {

    private java.util.List<io.gitbub.devlibx.jm.avro.month.child.Container> ParentContainer;
    private java.util.Map<java.lang.CharSequence,io.gitbub.devlibx.jm.avro.month.child.Container> data;
    private int version;

    /** Creates a new Builder */
    private Builder() {
      super(io.gitbub.devlibx.jm.avro.month.MonthAggregation.SCHEMA$);
    }
    
    /** Creates a Builder by copying an existing Builder */
    private Builder(io.gitbub.devlibx.jm.avro.month.MonthAggregation.Builder other) {
      super(other);
      if (isValidValue(fields()[0], other.ParentContainer)) {
        this.ParentContainer = data().deepCopy(fields()[0].schema(), other.ParentContainer);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.data)) {
        this.data = data().deepCopy(fields()[1].schema(), other.data);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.version)) {
        this.version = data().deepCopy(fields()[2].schema(), other.version);
        fieldSetFlags()[2] = true;
      }
    }
    
    /** Creates a Builder by copying an existing MonthAggregation instance */
    private Builder(io.gitbub.devlibx.jm.avro.month.MonthAggregation other) {
            super(io.gitbub.devlibx.jm.avro.month.MonthAggregation.SCHEMA$);
      if (isValidValue(fields()[0], other.ParentContainer)) {
        this.ParentContainer = data().deepCopy(fields()[0].schema(), other.ParentContainer);
        fieldSetFlags()[0] = true;
      }
      if (isValidValue(fields()[1], other.data)) {
        this.data = data().deepCopy(fields()[1].schema(), other.data);
        fieldSetFlags()[1] = true;
      }
      if (isValidValue(fields()[2], other.version)) {
        this.version = data().deepCopy(fields()[2].schema(), other.version);
        fieldSetFlags()[2] = true;
      }
    }

    /** Gets the value of the 'ParentContainer' field */
    public java.util.List<io.gitbub.devlibx.jm.avro.month.child.Container> getParentContainer() {
      return ParentContainer;
    }
    
    /** Sets the value of the 'ParentContainer' field */
    public io.gitbub.devlibx.jm.avro.month.MonthAggregation.Builder setParentContainer(java.util.List<io.gitbub.devlibx.jm.avro.month.child.Container> value) {
      validate(fields()[0], value);
      this.ParentContainer = value;
      fieldSetFlags()[0] = true;
      return this; 
    }
    
    /** Checks whether the 'ParentContainer' field has been set */
    public boolean hasParentContainer() {
      return fieldSetFlags()[0];
    }
    
    /** Clears the value of the 'ParentContainer' field */
    public io.gitbub.devlibx.jm.avro.month.MonthAggregation.Builder clearParentContainer() {
      ParentContainer = null;
      fieldSetFlags()[0] = false;
      return this;
    }

    /** Gets the value of the 'data' field */
    public java.util.Map<java.lang.CharSequence,io.gitbub.devlibx.jm.avro.month.child.Container> getData() {
      return data;
    }
    
    /** Sets the value of the 'data' field */
    public io.gitbub.devlibx.jm.avro.month.MonthAggregation.Builder setData(java.util.Map<java.lang.CharSequence,io.gitbub.devlibx.jm.avro.month.child.Container> value) {
      validate(fields()[1], value);
      this.data = value;
      fieldSetFlags()[1] = true;
      return this; 
    }
    
    /** Checks whether the 'data' field has been set */
    public boolean hasData() {
      return fieldSetFlags()[1];
    }
    
    /** Clears the value of the 'data' field */
    public io.gitbub.devlibx.jm.avro.month.MonthAggregation.Builder clearData() {
      data = null;
      fieldSetFlags()[1] = false;
      return this;
    }

    /** Gets the value of the 'version' field */
    public java.lang.Integer getVersion() {
      return version;
    }
    
    /** Sets the value of the 'version' field */
    public io.gitbub.devlibx.jm.avro.month.MonthAggregation.Builder setVersion(int value) {
      validate(fields()[2], value);
      this.version = value;
      fieldSetFlags()[2] = true;
      return this; 
    }
    
    /** Checks whether the 'version' field has been set */
    public boolean hasVersion() {
      return fieldSetFlags()[2];
    }
    
    /** Clears the value of the 'version' field */
    public io.gitbub.devlibx.jm.avro.month.MonthAggregation.Builder clearVersion() {
      fieldSetFlags()[2] = false;
      return this;
    }

    @Override
    public MonthAggregation build() {
      try {
        MonthAggregation record = new MonthAggregation();
        record.ParentContainer = fieldSetFlags()[0] ? this.ParentContainer : (java.util.List<io.gitbub.devlibx.jm.avro.month.child.Container>) defaultValue(fields()[0]);
        record.data = fieldSetFlags()[1] ? this.data : (java.util.Map<java.lang.CharSequence,io.gitbub.devlibx.jm.avro.month.child.Container>) defaultValue(fields()[1]);
        record.version = fieldSetFlags()[2] ? this.version : (java.lang.Integer) defaultValue(fields()[2]);
        return record;
      } catch (Exception e) {
        throw new org.apache.avro.AvroRuntimeException(e);
      }
    }
  }
}
